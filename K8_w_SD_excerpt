# motivations:
# to minimally gain experience scaling compute securely 
# so as not to leave idle or increase costs unnecessary 
# after use or downtime for self and users.
# setting up using Gu's article or other similar articles
# geared towards cloud orchestrating AI would 
# progress me towards hosting my own services for 
# OpenCollective media translation and collaboration 
# (website, whisper, mistral openWebUI)
# 
# additional benefits include
# 1) LoRA for training SD on personal images
# which can optionally help in Collective Expression project
# since optimally we want expressions to be trained on other platforms
# 2) we can try the open webUI version that will get us 1st steps for
# media learning, and then for our own cloud version (uses gradio instead of svelte)

# sources
# LoRA
# https://www.shruggingface.com/blog/self-portraits-with-stable-diffusion-and-lora
# https://www.linkedin.com/pulse/create-ai-model-your-face-have-fun-stable-diffusion-guillaume-lain%C3%A9
# https://arstechnica.com/gadgets/2023/03/making-faces-how-to-train-an-ai-on-your-face-to-create-silly-portraits/
# more at img gen mobile bookmarks


# checklist:
# 1) access aws cloud
# 2) check victor gu repo and source
# 3) spin up orchestration and stable diffusion 
# 4) refer to docs, cgpt n files to try different compute arch. exercises


# make sure:
# 1) to close or lower cloud compute n orchestration effectively
# after use to lower costs

# 2) access is secure yet scalable (ingress-nginx)

1/19/25 1130-1305

what i did:
  getting familar with vic gu's deployment by using the following aws cloudshell, terraform and helm links:
  # terraaform tutorial on basic concepts and next steps
  https://developer.hashicorp.com/terraform/tutorials/aws-get-started/aws-build
  # dl, ul, file into s3 bucket
  https://docs.aws.amazon.com/cloudshell/latest/userguide/getting-started.html#home-directory-backup
  https://registry.terraform.io/providers/hashicorp/aws/2.43.0/docs


for going through setting up git in aws cloudshell
  https://catalog.us-east-1.prod.workshops.aws/workshops/65a1d035-05db-4d86-9ca5-21d9dbca2b8d/en-US
and more labs like this, camps eg infrastructure.
  https://community.aws/students


unsure whether I need to install aws CLI if i'm using my laptop locally.

would prefer local to aws cloud shell because 
  1) i don't just want to deploy the orchestration
  2) i want to read, understand and comment on the codes in the respective/essential files
  3) I may need to modify param values to my requirements (eg amazon zone etc).
or
  1) I can link my github account to cloudshell
  2) I can use vim on aws cloudshell
  3) I can then edit and edit and commit to my own git account that can be reflected on cloudshell home dir.

next steps: 
  1) set up git in aws cloudshell
  2) further inspect, understand, comment why, how and where Vic Gu wrote his tf and find his sources.
  3) continue to spin up SD orchestration
  - review and make flashcards of important functions, concepts or repeatable processes.

1405

1730-1745
cloned vic gu's repo to hoohooprog

1830-1853
cloned repo from hoohooprog to cloudshell dir

1853-1930
tried to find more definitive guide on how the different parts of a tf file correspond to the needs of using
aws eks

-1945
opened some tabs in laptop, hoping for clearer instructions where n how to reference
tf files for k8s

